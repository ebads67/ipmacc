<scanner version='0.1.7b'>
<c><![CDATA[

#include <malloc.h>
#include <time.h>
#include <openacc.h>

#include <math.h>

#define SIZE 1000
int main()
{
    int i;

    float a[SIZE];
    float b[SIZE];
    float c[SIZE];
    float seq[SIZE];




    for (i = 0; i < SIZE; ++i) {

        a[i] = (float)i ;
        b[i] = (float)2*i;
        c[i] = 0.0f;
    }

    unsigned long long int tic, toc;

    int k;
    for(k=0; k<3; k++){

        printf("Calculation on GPU ... ");
        tic = clock();



        ]]></c>
            <pragma directive='data' clause='pcopyin(a[0:SIZE],b[0:SIZE]) pcopy(c[0:SIZE])' >
            <c><![CDATA[

            {


                {


                    ]]></c>
                        <pragma directive='kernels' clause='' >
                        <c><![CDATA[

                        {


                            {


                                ]]></c>
                                    <pragma directive='loop' clause='independent vector(16)' >
                                    <c><![CDATA[

                                    {


                                        {

                                            ]]></c>
                                                <for initial='i = 0' init='0' boundary=' i &lt; SIZE'  increment=' ++i' iterator='i'  terminate='((SIZE))' incstep='1' incoperator='+' >
                                                <c><![CDATA[
                                                {

                                                    c[i] = a[i] + b[i] ;
                                                }
                                            ]]></c>
                                                </for>
                                                <c><![CDATA[

                                        }
                                    }
                                ]]></c>
                                    </pragma>
                                    <c><![CDATA[


                            }
                        }
                    ]]></c>
                        </pragma>
                        <c><![CDATA[


                }
            }
        ]]></c>
            </pragma>
            <c><![CDATA[


            toc = clock();
        printf(" %6.4f ms\n",(toc-tic)/(float)1000);
    }





    printf("Calculation on CPU ... ");
    tic = clock();
    for (i = 0; i < SIZE; ++i) {

        seq[i] = a[i] + b[i] ;
        if(c[i]!= seq[i]) {
            printf("Error %d %16.10f!=%16.10f \n", i, c[i], seq[i]);
            exit(1);
        }
    }
    toc = clock();
    printf(" %6.4f ms\n",(toc-tic)/(float)1000);

    printf("OpenACC vector add test was successful!\n");

    return 0;
}


]]></c>
</scanner>
